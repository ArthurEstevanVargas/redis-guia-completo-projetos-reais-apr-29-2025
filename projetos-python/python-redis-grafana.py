"""
# Lembre-se de instalar a lib 'redis'
# pip install redis
"""

import redis
import time

def redis_benchmark(host='localhost', port=6379, db=0, num_operation=10000):

    # Conexão com o Redis
    client = redis.Redis(host=host, port=port, db=db)

    # Dados para inserção
    # data = {f'key{i}': f'value{i}' for i in range(num_operation)}

    data = {f'key{i}': f'5e884898da28047151d0e56f8dc6292773603d0d6aabbdd62a11ef721d1542d85e884898da28047151d0e56f8dc6292773603d0d6aabbdd62a11ef721d1542d85e884898da28047151d0e56f8dc62927735e884898da28047151d0e56f8dc6292773603d0d6aabbdd62a11ef721d1542d85e884898da28047151d0e56f8dc6292773603d0d6aabbdd62a11ef721d1542d85e884898da28047151d0e56f8dc62927735e884898da28047151d0e56f8dc6292773603d0d6aabbdd62a11ef721d1542d85e884898da28047151d0e56f8dc6292773603d0d6aabbdd62a11ef721d1542d85e884898da28047151d0e56f8dc62927735e884898da28047151d0e56f8dc6292773603d0d6aabbdd62a11ef721d1542d85e884898da28047151d0e56f8dc6292773603d0d6aabbdd62a11ef721d1542d85e884898da28047151d0e56f8dc62927735e884898da28047151d0e56f8dc6292773603d0d6aabbdd62a11ef721d1542d85e884898da28047151d0e56f8dc6292773603d0d6aabbdd62a11ef721d1542d85e884898da28047151d0e56f8dc62927735e884898da28047151d0e56f8dc6292773603d0d6aabbdd62a11ef721d1542d85e884898da28047151d0e56f8dc6292773603d0d6aabbdd62a11ef721d1542d85e884898da28047151d0e56f8dc62927735e884898da28047151d0e56f8dc6292773603d0d6aabbdd62a11ef721d1542d85e884898da28047151d0e56f8dc6292773603d0d6aabbdd62a11ef721d1542d85e884898da28047151d0e56f8dc62927735e884898da28047151d0e56f8dc6292773603d0d6aabbdd62a11ef721d1542d85e884898da28047151d0e56f8dc6292773603d0d6aabbdd62a11ef721d1542d85e884898da28047151d0e56f8dc62927735e884898da28047151d0e56f8dc6292773603d0d6aabbdd62a11ef721d1542d85e884898da28047151d0e56f8dc6292773603d0d6aabbdd62a11ef721d1542d85e884898da28047151d0e56f8dc62927735e884898da28047151d0e56f8dc6292773603d0d6aabbdd62a11ef721d1542d85e884898da28047151d0e56f8dc6292773603d0d6aabbdd62a11ef721d1542d85e884898da28047151d0e56f8dc62927735e884898da28047151d0e56f8dc6292773603d0d6aabbdd62a11ef721d1542d85e884898da28047151d0e56f8dc6292773603d0d6aabbdd62a11ef721d1542d85e884898da28047151d0e56f8dc62927735e884898da28047151d0e56f8dc6292773603d0d6aabbdd62a11ef721d1542d85e884898da28047151d0e56f8dc6292773603d0d6aabbdd62a11ef721d1542d85e884898da28047151d0e56f8dc62927735e884898da28047151d0e56f8dc6292773603d0d6aabbdd62a11ef721d1542d85e884898da28047151d0e56f8dc6292773603d0d6aabbdd62a11ef721d1542d85e884898da28047151d0e56f8dc62927735e884898da28047151d0e56f8dc6292773603d0d6aabbdd62a11ef721d1542d85e884898da28047151d0e56f8dc6292773603d0d6aabbdd62a11ef721d1542d85e884898da28047151d0e56f8dc62927735e884898da28047151d0e56f8dc6292773603d0d6aabbdd62a11ef721d1542d85e884898da28047151d0e56f8dc6292773603d0d6aabbdd62a11ef721d1542d85e884898da28047151d0e56f8dc62927735e884898da28047151d0e56f8dc6292773603d0d6aabbdd62a11ef721d1542d85e884898da28047151d0e56f8dc6292773603d0d6aabbdd62a11ef721d1542d85e884898da28047151d0e56f8dc62927735e884898da28047151d0e56f8dc6292773603d0d6aabbdd62a11ef721d1542d85e884898da28047151d0e56f8dc6292773603d0d6aabbdd62a11ef721d1542d85e884898da28047151d0e56f8dc62927735e884898da28047151d0e56f8dc6292773603d0d6aabbdd62a11ef721d1542d85e884898da28047151d0e56f8dc6292773603d0d6aabbdd62a11ef721d1542d85e884898da28047151d0e56f8dc62927735e884898da28047151d0e56f8dc6292773603d0d6aabbdd62a11ef721d1542d85e884898da28047151d0e56f8dc6292773603d0d6aabbdd62a11ef721d1542d85e884898da28047151d0e56f8dc62927735e884898da28047151d0e56f8dc6292773603d0d6aabbdd62a11ef721d1542d85e884898da28047151d0e56f8dc6292773603d0d6aabbdd62a11ef721d1542d85e884898da28047151d0e56f8dc62927735e884898da28047151d0e56f8dc6292773603d0d6aabbdd62a11ef721d1542d85e884898da28047151d0e56f8dc6292773603d0d6aabbdd62a11ef721d1542d85e884898da28047151d0e56f8dc62927735e884898da28047151d0e56f8dc6292773603d0d6aabbdd62a11ef721d1542d85e884898da28047151d0e56f8dc6292773603d0d6aabbdd62a11ef721d1542d85e884898da28047151d0e56f8dc62927735e884898da28047151d0e56f8dc6292773603d0d6aabbdd62a11ef721d1542d85e884898da28047151d0e56f8dc6292773603d0d6aabbdd62a11ef721d1542d85e884898da28047151d0e56f8dc62927735e884898da28047151d0e56f8dc6292773603d0d6aabbdd62a11ef721d1542d85e884898da28047151d0e56f8dc6292773603d0d6aabbdd62a11ef721d1542d85e884898da28047151d0e56f8dc62927735e884898da28047151d0e56f8dc6292773603d0d6aabbdd62a11ef721d1542d85e884898da28047151d0e56f8dc6292773603d0d6aabbdd62a11ef721d1542d85e884898da28047151d0e56f8dc62927735e884898da28047151d0e56f8dc6292773603d0d6aabbdd62a11ef721d1542d85e884898da28047151d0e56f8dc6292773603d0d6aabbdd62a11ef721d1542d85e884898da28047151d0e56f8dc62927735e884898da28047151d0e56f8dc6292773603d0d6aabbdd62a11ef721d1542d85e884898da28047151d0e56f8dc6292773603d0d6aabbdd62a11ef721d1542d85e884898da28047151d0e56f8dc62927735e884898da28047151d0e56f8dc6292773603d0d6aabbdd62a11ef721d1542d85e884898da28047151d0e56f8dc6292773603d0d6aabbdd62a11ef721d1542d85e884898da28047151d0e56f8dc62927735e884898da28047151d0e56f8dc6292773603d0d6aabbdd62a11ef721d1542d85e884898da28047151d0e56f8dc6292773603d0d6aabbdd62a11ef721d1542d85e884898da28047151d0e56f8dc62927735e884898da28047151d0e56f8dc6292773603d0d6aabbdd62a11ef721d1542d85e884898da28047151d0e56f8dc6292773603d0d6aabbdd62a11ef721d1542d85e884898da28047151d0e56f8dc62927735e884898da28047151d0e56f8dc6292773603d0d6aabbdd62a11ef721d1542d85e884898da28047151d0e56f8dc6292773603d0d6aabbdd62a11ef721d1542d85e884898da28047151d0e56f8dc62927735e884898da28047151d0e56f8dc6292773603d0d6aabbdd62a11ef721d1542d85e884898da28047151d0e56f8dc6292773603d0d6aabbdd62a11ef721d1542d85e884898da28047151d0e56f8dc62927735e884898da28047151d0e56f8dc6292773603d0d6aabbdd62a11ef721d1542d85e884898da28047151d0e56f8dc6292773603d0d6aabbdd62a11ef721d1542d85e884898da28047151d0e56f8dc62927735e884898da28047151d0e56f8dc6292773603d0d6aabbdd62a11ef721d1542d85e884898da28047151d0e56f8dc6292773603d0d6aabbdd62a11ef721d1542d85e884898da28047151d0e56f8dc62927735e884898da28047151d0e56f8dc6292773603d0d6aabbdd62a11ef721d1542d85e884898da28047151d0e56f8dc6292773603d0d6aabbdd62a11ef721d1542d85e884898da28047151d0e56f8dc6292773{i}' for i in range(num_operation)}

    # Benchmark de escrita
    start_time = time.time()
    for key, value in data.items():
        client.set(key, value)
    write_duration = time.time() - start_time
    print(f"Tempo de gravação para {num_operation} operações: {write_duration:.4f} segundos")

    # Benchmark de leitura
    start_time = time.time()
    for key, value in data.items():
        _ = client.get(key)
    read_duration = time.time() - start_time
    print(f"Tempo de leitura para {num_operation} operações: {read_duration:.4f} segundos")

    # Limpar dados inseridos
    start_time = time.time()
    for key in data.keys():
        client.delete(key)
    read_duration = time.time() - start_time
    print(f"Limpeza dos dados p/ {num_operation} operações: {read_duration:.4f} segundos")

if __name__ == "__main__":
    # 500000 ~1min45sec
    redis_benchmark(num_operation=250000)